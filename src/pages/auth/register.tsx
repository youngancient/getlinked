import { DottedLine } from "@/components/Icons/Icons";
import { LargeBtnStyle } from "@/styles/ComponentStyles/Buttons";
import { CheckBox } from "@/styles/ComponentStyles/Icons";
import {
  ErrorStyles,
  SmallTextStyles,
  SmallerTextStyles,
} from "@/styles/ComponentStyles/Text";
import {
  ButtonLoader,
  RegisterStyles,
} from "@/styles/PageStyles/auth/Register";
import Head from "next/head";
import Image from "next/image";
import { motion } from "framer-motion";
import { RegisterImgVariants, textVariant } from "@/animations/animations";
import { Dropdown, Success } from "@/components/Auth/Register";
import { useForm } from "react-hook-form";
import { useState } from "react";

interface IForm {
  teamName: string;
  phone: string;
  email: string;
  topic: string;
}
const Register = () => {
  const {
    register,
    reset,
    handleSubmit,
    formState: { errors },
  } = useForm<IForm>({
    mode: "onBlur",
    defaultValues: {
      teamName: "",
      phone: "",
      email: "",
      topic: "",
    },
  });
  const [isLoading, setLoading] = useState(false);
  const [isSuccess, setIsSuccess] = useState(false);

  const handleRegister = (data: IForm) => {
    console.log(data);
    setLoading(true);
    setTimeout(() => {
      setLoading(false);
      setIsSuccess(true);
    }, 2000);
    reset();
  };

  const cancel =()=>{
    setIsSuccess(false);
  }
  return (
    <>
      <Head>
        <title>Register</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        {isSuccess && <Success handleClose={cancel} />}
        <RegisterStyles>
          <div className="one">
            <h3>Register</h3>
            <motion.div
              className="img"
              initial="initial"
              whileInView="final"
              variants={RegisterImgVariants}
            >
              <Image
                src="/assets/thumbsup.png"
                alt="thumbs up"
                width={717}
                height={717}
              />
            </motion.div>
          </div>
          <div className="two">
            <h3>Register</h3>
            <div className="text">
              <SmallTextStyles>Be part of this movement!</SmallTextStyles>
              <div className="move">
                <Image
                  src="/assets/man_walking.svg"
                  alt="man walking"
                  width={26}
                  height={26}
                  className="man"
                />
                <Image
                  src="/assets/woman_walking.svg"
                  alt="woman walking"
                  width={26}
                  height={26}
                  className="woman"
                />
                <DottedLine />
              </div>
            </div>
            <h4>CREATE YOUR ACCOUNT</h4>
            <form onSubmit={handleSubmit(handleRegister)}>
              <div className="inner">
                <motion.div
                  className="form-ele"
                  initial="initial"
                  whileInView="final"
                  variants={textVariant}
                >
                  <label htmlFor="name">
                    <SmallTextStyles>Team&rsquo;s Name</SmallTextStyles>
                  </label>
                  <input
                    type="text"
                    {...register("teamName", { required: "Name is required" })}
                    id=""
                    placeholder="Enter the name of your group"
                  />
                  <ErrorStyles className="down">
                    {errors?.teamName && errors.teamName.message}
                  </ErrorStyles>
                </motion.div>
                <motion.div
                  className="form-ele"
                  initial="initial"
                  whileInView="final2"
                  variants={textVariant}
                >
                  <label htmlFor="phone">
                    <SmallTextStyles>Phone</SmallTextStyles>
                  </label>
                  <input
                    type="number"
                    {...register("phone", { required: "Phone is required" })}
                    id=""
                    placeholder="Enter your phone number"
                  />
                  <ErrorStyles className="down">
                    {errors?.phone && errors.phone.message}
                  </ErrorStyles>
                </motion.div>
              </div>
              <div className="inner">
                <motion.div
                  className="form-ele"
                  initial="initial"
                  whileInView="final"
                  variants={textVariant}
                >
                  <label htmlFor="email">
                    <SmallTextStyles>Email</SmallTextStyles>
                  </label>
                  <input
                    type="email"
                    {...register("email", { required: "Email is required" })}
                    id=""
                    placeholder="Enter your email address"
                  />
                  <ErrorStyles className="down">
                    {errors?.email && errors.email.message}
                  </ErrorStyles>
                </motion.div>
                <motion.div
                  className="form-ele"
                  initial="initial"
                  whileInView="final2"
                  variants={textVariant}
                >
                  <label htmlFor="topic">
                    <SmallTextStyles>Project Topic</SmallTextStyles>
                  </label>
                  <input
                    type="text"
                    {...register("topic", { required: "Topic is required" })}
                    id=""
                    placeholder="What is your group project topic"
                  />
                  <ErrorStyles className="down">
                    {errors?.topic && errors.topic.message}
                  </ErrorStyles>
                </motion.div>
              </div>
              <div className="inner xx">
                <motion.div
                  className="form-ele"
                  initial="initial"
                  whileInView="final"
                  variants={textVariant}
                >
                  <SmallTextStyles>Category</SmallTextStyles>
                  <Dropdown placeholder="Select your category" />
                </motion.div>
                <motion.div
                  className="form-ele"
                  initial="initial"
                  whileInView="final2"
                  variants={textVariant}
                >
                  <SmallTextStyles>Group Size</SmallTextStyles>
                  <Dropdown placeholder="Select" />
                </motion.div>
              </div>
              <div className="bottom">
                <SmallerTextStyles className="italize">
                  <strong>
                    Please review your registration details before submitting
                  </strong>
                </SmallerTextStyles>
                <div className="check">
                  <CheckBox />
                  <SmallTextStyles>
                    I agreed with the event terms and conditions and privacy
                    policy
                  </SmallTextStyles>
                </div>
                <div className="btn">
                  <LargeBtnStyle>
                    {isLoading ? <ButtonLoader /> : "Register Now"}
                  </LargeBtnStyle>
                </div>
              </div>
            </form>
          </div>
        </RegisterStyles>
      </main>
    </>
  );
};

export default Register;
