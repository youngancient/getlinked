import { FB, IG, LinkedIn, XIcon } from "@/components/Icons/Icons";
import { LargeBtnStyle } from "@/styles/ComponentStyles/Buttons";
import {
  ErrorStyles,
  NormalTextStyles,
  SmallTextStyles,
} from "@/styles/ComponentStyles/Text";
import { ContactStyles } from "@/styles/PageStyles/Contact";
import Head from "next/head";
import Link from "next/link";
import { useForm } from "react-hook-form";
import { useEffect, useState } from "react";
import { AnimatePresence, motion } from "framer-motion";
import { ContactSuccess } from "@/components/Contact/Contact";
import { ButtonLoader } from "@/styles/PageStyles/auth/Register";
import { textVariant } from "@/animations/animations";
import { BASE_URL } from "../../constants/libs";
import axios from "axios";
import { SmallStarStyles, StarStyles } from "@/styles/ComponentStyles/Absolute";
import Image from "next/image";

interface IContactForm {
  firstName: string;
  email: string;
  phone: string;
  message: string;
}

const Contact = () => {
  const {
    register,
    reset,
    setValue,
    handleSubmit,
    formState: { errors },
  } = useForm<IContactForm>({
    mode: "onBlur",
    defaultValues: {
      firstName: "",
      email: "",
      phone: "",
      message: "",
    },
  });
  const [isLoading, setLoading] = useState(false);
  const [isSuccess, setIsSuccess] = useState(false);
  const cancel = () => {
    setIsSuccess(false);
  };
  const sendMessage = async (formData: IContactForm) => {
    try {
      setLoading(true);
      const { data } = await axios.post(`${BASE_URL}/hackathon/contact-form`, {
        first_name: formData.firstName,
        email: formData.email,
        message: formData.message,
        phone_number: formData.phone,
      });
      if (data) {
        setLoading(false);
        setIsSuccess(true);
        reset();
      }
    } catch (error) {
      setLoading(false);
      console.log(error);
    }
  };
  return (
    <>
      <Head>
        <title>Contact</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <AnimatePresence>
          {isSuccess && <ContactSuccess handleClose={cancel} key="kagura" />}
        </AnimatePresence>
        <ContactStyles>
          <div className="one">
            <div className="one-a">
              <SmallStarStyles className="purple-1">
                <Image
                  alt="star"
                  width={26}
                  height={32}
                  src="/assets/purple-star.svg"
                />
              </SmallStarStyles>
              <motion.h3
                initial="initial"
                whileInView="final"
                variants={textVariant}
              >
                Get in touch
              </motion.h3>
              <NormalTextStyles>
                Contact <br /> Information
              </NormalTextStyles>
              <NormalTextStyles>
                27,Alara Street <br /> Yaba 100012 <br /> Lagos State
              </NormalTextStyles>
              <NormalTextStyles>Call Us : 07067981819</NormalTextStyles>
              <NormalTextStyles>
                we are open from Monday-Friday <br />
                08:00am - 05:00pm
              </NormalTextStyles>
            </div>
            <div className="one-b">
              <NormalTextStyles>Share on</NormalTextStyles>
              <div className="socials">
                <Link href="#">
                  <IG />
                </Link>
                <Link href="#">
                  <XIcon />
                </Link>
                <Link href="#">
                  <FB />
                </Link>
                <Link href="#">
                  <LinkedIn />
                </Link>
              </div>
            </div>
          </div>
          <div className="two">
            <form onSubmit={handleSubmit(sendMessage)}>
              <StarStyles className="white-1">
                <Image
                  alt="star"
                  width={26}
                  height={32}
                  src="/assets/white_star.svg"
                />
              </StarStyles>
              <StarStyles className="purple-2">
                <Image
                  alt="star"
                  width={26}
                  height={32}
                  src="/assets/purple-star.svg"
                />
              </StarStyles>
              <div className="h">
                <StarStyles className="grey-1">
                  <Image
                    alt="star"
                    width={26}
                    height={32}
                    src="/assets/grey-star.svg"
                  />
                </StarStyles>
                <motion.h3
                  initial="initial"
                  whileInView="final"
                  variants={textVariant}
                >
                  Questions or need assistance?
                </motion.h3>
                <motion.h3
                  initial="initial"
                  whileInView="final2"
                  variants={textVariant}
                >
                  Let us know about it!
                </motion.h3>
              </div>
              <SmallTextStyles className="mobile">
                Email us below to any question related to our event
              </SmallTextStyles>
              <div className="inner">
                <motion.div
                  className="fname"
                  initial="initial"
                  whileInView="final2"
                  variants={textVariant}
                >
                  <input
                    type="text"
                    {...register("firstName", { required: "Name is required" })}
                    id=""
                    placeholder="First Name"
                  />
                  {errors?.firstName && (
                    <ErrorStyles className="down">
                      {" "}
                      {errors.firstName.message}
                    </ErrorStyles>
                  )}
                </motion.div>
                <motion.div
                  className="email"
                  initial="initial"
                  whileInView="final2"
                  variants={textVariant}
                >
                  <input
                    type="email"
                    {...register("email", { required: "Email is required" })}
                    id=""
                    placeholder="Email"
                  />
                  {errors?.firstName && (
                    <ErrorStyles className="down">
                      {" "}
                      {errors.firstName.message}
                    </ErrorStyles>
                  )}
                </motion.div>
                <motion.div
                  className="phone"
                  initial="initial"
                  whileInView="final2"
                  variants={textVariant}
                >
                  <input
                    type="number"
                    {...register("phone", {
                      required: "Phone is required",
                      minLength: {
                        value: 11,
                        message: "11 digits minimum",
                      },
                    })}
                    id=""
                    placeholder="Enter your phone number"
                  />

                  {errors?.phone && (
                    <ErrorStyles className="down">
                      {" "}
                      {errors.phone.message}{" "}
                    </ErrorStyles>
                  )}
                </motion.div>
                <motion.div
                  className="message"
                  initial="initial"
                  whileInView="final2"
                  variants={textVariant}
                >
                  <textarea
                    id=""
                    rows={4}
                    {...register("message", {
                      required: "Message is required",
                    })}
                    placeholder="Message"
                  ></textarea>
                  {errors?.message && (
                    <ErrorStyles className="down">
                      {" "}
                      {errors.message.message}
                    </ErrorStyles>
                  )}
                </motion.div>
              </div>
              <div className="btn">
                <LargeBtnStyle>
                  {isLoading ? <ButtonLoader /> : "Submit"}
                </LargeBtnStyle>
              </div>
            </form>

            <div className="mobile">
              <div className="one-b">
                <NormalTextStyles>Share on</NormalTextStyles>
                <div className="socials">
                  <Link href="#">
                    <IG />
                  </Link>
                  <Link href="#">
                    <XIcon />
                  </Link>
                  <Link href="#">
                    <FB />
                  </Link>
                  <Link href="#">
                    <LinkedIn />
                  </Link>
                </div>
              </div>
            </div>
          </div>
        </ContactStyles>
      </main>
    </>
  );
};

export default Contact;
